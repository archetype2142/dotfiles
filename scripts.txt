#!/bin/bash

# Setup an ubuntu 18.04 LTS for Rails production server 

# the name of the script without a path
name=`basename $0`

# function for printing error messages to diagnostic output
error_msg()  { 
  echo "$name: error: $1" 1>&2 
}

help() {
cat<<EOT 1>&2

usage: 
  $name [-hn] [-u <username>] [-r <ruby-version>]
  The script is dedicated to creating a server ready to host a production rails app over passenger on ubuntu 18.04 LTS

  $name correct syntax examples: 
    $name -u username   Username for new host user 
    $name -h            Print this menu
    $name -r 3.0.2      Install rbenv with ruby version
    $name -n            Install node and yarn
  $name incorrect syntax example: 
    $name -d
EOT
}

# get options
u=n; r=n; n=n
while getopts :hu:r: flag
do
  case "${flag}" in
    u|--username) username=${OPTARG};;
    r|--rbenv_ruby) r="y"; ruby_version=${OPTARG};;
    n|--node_yarn) n=y ;;
    h|--help) help;;
  esac
done

# if no arguments given
if [ $# -eq 0 ] ; then
  echo $'\nERROR: No arguments supplid\n'
  help
  exit
fi

if [ -z "$username" ] ; then
  echo $'\nERROR: Username is mandatory\n'
  help
  exit
fi

if [ $r=="y" ] ; then
  if [ -z "$ruby_version" ]; then
    echo $'\nERROR: Ruby version is mandatory with -r flag'
    help
    exit
  fi
fi

# Create User
echo "creating new user, username: $username ...";
adduser $username
usermod -aG sudo $username

# Install dependencies
echo "installing dependencies ... ";
sudo apt update
sudo apt-get install -y \
  nginx nginx-extras libpq-dev \
  autoconf bison build-essential \
  libssl-dev libyaml-dev \
  libreadline6-dev zlib1g-dev \
  libncurses5-dev libffi-dev \
  libgdbm5 libgdbm-dev imagemagick

if [ "$r"=="y" ] ; then
  echo "installing rbenv ..."
  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
  echo 'export PATH="$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"' >> ~/.bashrc
  echo 'eval "$(rbenv init -)"' >> ~/.bashrc
  source ~/.bashrc
  type rbenv

  echo "installing ruby-build ..."
  git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build

  echo "installing ruby $ruby_version ..."
  rbenv install $ruby_version
  rbenv global $ruby_version
  echo "gem: --no-document" > ~/.gemrc
  gem install bundler
fi

if [ "$r"=="y" ]; then
  echo "installing nodejs & npm ..."
  sudo apt install -y nodejs npm
  
  echo "installing yarn ..."
  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  sudo apt update -y && sudo apt install -y yarn
fi

echo "installing passenger and nginx ..."
sudo apt-get install -y dirmngr gnupg
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
sudo apt-get install -y apt-transport-https ca-certificates

# Add our APT repository
echo "adding passenger apt repo"
sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main > /etc/apt/sources.list.d/passenger.list'
sudo apt-get update

# Install Passenger + Nginx module
sudo apt-get install -y libnginx-mod-http-passenger

if [ ! -f /etc/nginx/modules-enabled/50-mod-http-passenger.conf ]; then sudo ln -s /usr/share/nginx/modules-available/mod-http-passenger.load /etc/nginx/modules-enabled/50-mod-http-passenger.conf ; f
sudo ls /etc/nginx/conf.d/mod-http-passenger.conf
sudo service nginx restart

echo "your ruby location"
passenger-config about ruby-command
